<?php

/**
 * @file
 * Contains install and update for Varbase Media module.
 */

use Symfony\Component\Yaml\Yaml;
use Drupal\Core\Config;
use Drupal\Core\Config\InstallStorage;
use Drupal\Core\Config\StorageInterface;
use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 */
function varbase_media_install() {

  $module_name = preg_replace('/_install$/', '', __FUNCTION__);
  $module_path = Drupal::service('module_handler')->getModule($module_name)->getPath();

  // Processer for install: in [$module_name].info.yml file.
  // ---------------------------------------------------------------------------
  $module_info_file = $module_path . '/'. $module_name . '.info.yml';
  if (file_exists($module_info_file)) {
    $module_info_data = (array) Yaml::parse(file_get_contents($module_info_file));
    if (isset($module_info_data['install'])
      && is_array($module_info_data['install'])) {
      \Drupal::service('module_installer')->install($module_info_data['install'], TRUE);
    }
  }

  // Install optional configs.
  $optional_install_path = $module_path . '/' . InstallStorage::CONFIG_OPTIONAL_DIRECTORY;
  if (is_dir($optional_install_path)) {
    $config_installer = \Drupal::service('config.installer');
    $config_installer->installDefaultConfig('module', $module_name);
    // Install any optional config the module provides.
    $storage = new FileStorage($optional_install_path, StorageInterface::DEFAULT_COLLECTION);
    $config_installer->installOptionalConfig($storage, '');
    // Have the .settings.yml configs into the active config.
    $settings_config_files = file_scan_directory($optional_install_path, '/^.*\\.(settings.yml)$/i');
    $settings_config_filenames = array();
    foreach ($settings_config_files as $settings_config_file) {
      $settings_config_file_content = file_get_contents(DRUPAL_ROOT . '/' . $settings_config_file->uri);
      $settings_config_file_data = (array) Yaml::parse($settings_config_file_content);
      $config_factory = \Drupal::configFactory()->getEditable($settings_config_file->name);
      $config_factory->setData($settings_config_file_data)->save(TRUE);
    }
  }
  // ---------------------------------------------------------------------------

  // Activate configurations to work with enable_multilingual.
  if (\Drupal::moduleHandler()->moduleExists('varbase_internationalization')) {
    $module_path_config_optional = $module_path . '/config/optional/';
 
    $config_path = $module_path_config_optional . 'language.content_settings.media.file.yml';
    $config_content = file_get_contents($config_path);
    $config_data = (array) Yaml::parse($config_content);
    $config_factory = \Drupal::configFactory()->getEditable('language.content_settings.media.file');
    $config_factory->setData($config_data)->save(TRUE);

    $config_path = $module_path_config_optional . 'language.content_settings.media.image.yml';
    $config_content = file_get_contents($config_path);
    $config_data = (array) Yaml::parse($config_content);
    $config_factory = \Drupal::configFactory()->getEditable('language.content_settings.media.image');
    $config_factory->setData($config_data)->save(TRUE);

    $config_path = $module_path_config_optional . 'language.content_settings.media.video.yml';
    $config_content = file_get_contents($config_path);
    $config_data = (array) Yaml::parse($config_content);
    $config_factory = \Drupal::configFactory()->getEditable('language.content_settings.media.video');
    $config_factory->setData($config_data)->save(TRUE);

    $config_path = $module_path_config_optional . 'language.content_settings.media.remote_video.yml';
    $config_content = file_get_contents($config_path);
    $config_data = (array) Yaml::parse($config_content);
    $config_factory = \Drupal::configFactory()->getEditable('language.content_settings.media.remote_video');
    $config_factory->setData($config_data)->save(TRUE);

  }
}
