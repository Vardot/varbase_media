<?php

/**
 * @file
 * Contains varbase_media.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\editor\Entity\Editor;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\ds\Ds;
use Drupal\entity_browser_generic_embed\OverrideHelper as Override;
use Drupal\varbase_media\Plugin\media\Source\Video;


/**
 * Implements hook_page_attachments().
 */
function varbase_media_page_attachments(array &$page) {
  // Attached the varbase media common library.
  $page['#attached']['library'][] = 'varbase_media/common';

  if (!(\Drupal::currentUser()->isAnonymous())) {
    // Attached the varbase media common logged in users library.
    $page['#attached']['library'][] = 'varbase_media/common_logged';
  }
}

/**
 * Implements hook_ckeditor_css_alter().
 */
function varbase_media_ckeditor_css_alter(array &$css, Editor $editor) {

  // Attached the varbase media common style.
  $css[] = drupal_get_path('module', 'varbase_media') . '/css/varbase_media.common.css';

  // Attached the varbase media common logged in users style.
  $css[] = drupal_get_path('module', 'varbase_media') . '/css/varbase_media.common_logged.css';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function varbase_media_form_entity_embed_dialog_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Only at the embed step.
  if ($form_state->get('step') == 'embed') {

    // Get the entity values and attributes.
    $entity_element = empty($values['attributes']) ? array() : $values['attributes'];
    $entity_element += $form_state->get('entity_element');
    $form_state->set('entity_element', $entity_element);
    $entity = $form_state->get('entity');

    // Get the entity bundle type.
    $bundle_type = $entity->bundle();
    $values = $form_state->getValues();

    switch ($bundle_type) {
      case "image":

        // Adding the alt field to the embed dialog form.
        $form['attributes']['alt'] = [
          '#title' => t('Alternative text'),
          '#type' => 'textfield',
          '#required' => TRUE ,
          '#default_value' => $entity->field_image->alt,
          '#description' => t('This text will be used by screen readers, search engines, or when the image cannot be loaded.'),
        ];

        // Adding the title field to the embed dialog form.
        $form['attributes']['title'] = [
          '#title' => t('Title'),
          '#type' => 'textfield',
          '#default_value' => $entity->field_image->title,
          '#description' => t('The title is used as a tool tip when the user hovers the mouse over the image.'),
        ];

        // Render the Embed entity.
        $form['entity'] = [
          '#type' => 'item',
          '#markup' => \Drupal::service('renderer')->renderRoot(entity_view($entity, 's3')),
        ];

        // Change the "data align" field from rado buttons to Select list.
        $form['attributes']['data-align']['#type'] = 'select';
        $form['attributes']['data-align']['#wrapper_attributes'] = '';
        $form['attributes']['data-align'] += [
          '#description' => t('Choose the positioning of the image.'),
        ];

        // Add description for the caption field.
        $form['attributes']['data-caption'] += [
          '#description' => t('A caption will be displayed under the image, to describe it in context of your content.'),
        ];

        // Adding the updated alt text to the media entity.
        if (isset($entity_element['alt'])) {
          $entity->field_image->alt = $entity_element['alt'];
        }

        // Adding the updated title text to the media entity.
        if (isset($entity_element['title'])) {
          $entity->field_image->title = $entity_element['title'];
        }

        $entity->save();
        break;
    }

    if (isset($form['revision_log_message'])) {
      $form['revision_log_message']['#access'] = false;
    }
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function varbase_media_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {

  if ($entity->getEntityTypeId() == 'media'
    && $build['#view_mode'] != 'field_preview') {
    if(isset($build['field_media_cover_image'])
      && isset($build['field_media_cover_image']['#items'])) {

      $fields = $build['field_media_cover_image']['#items'];

      if (is_object($fields)) {

        // Hide thumbnail of media if we do have cover image data.
        if (isset($build['thumbnail'])) {
          $build['thumbnail']['#access'] = FALSE;
        }
        
        $build['field_media_cover_image']['#attached']['library'][] = 'varbase_media/varbase_video_player';
      }
    }

    // Attach the varbase media video library for video embed field.
    if (isset($build['field_media_video_embed_field'])
      && isset($build['field_media_video_embed_field'][0])) {
      $build['field_media_video_embed_field'][0]['#attached']['library'][] = 'varbase_media/varbase_video_player';
    }

    // Attach the varbase media video library for video file field.
    if (isset($build['field_media_video_file'])) {
      $build['field_media_video_file']['#attached']['library'][] = 'varbase_media/varbase_video_player';
    }
  }
}

/**
 * Implements hook_media_source_info_alter().
 */
function varbase_media_media_source_info_alter(array &$sources) {
  $sources['video_embed_field']['input_match'] = [
    'field_types' => [
      'string',
      'string_long',
      'video_embed_field',
    ],
  ];
  $sources['video_embed_field']['preview'] = TRUE;

  Override::pluginClass($sources['video_embed_field'], Video::class);
}

/**
 * Implements hook_form_alter().
 */
function varbase_media_form_alter(&$form, &$form_state, $form_id) {
  if ($form_state->getFormObject() instanceof \Drupal\Core\Entity\EntityFormInterface) {
    $entity_type = $form_state->getFormObject()->getEntity()->getEntityTypeId();

    // Only for media entity type.
    if ($entity_type == 'media') {
      // No revision information or revision log message.
      if (isset($form['revision_information'])) {
        $form['revision_information']['#access'] = FALSE;
      }
    }
  }

  if ($form_id == 'entity_browser_image_browser_form'
      || $form_id == 'entity_browser_media_browser_form'
      || $form_id == 'entity_browser_editor_media_browser_form') {
    $form['#attached']['library'][] = 'varbase_media/auto_fill_media_data';
  }
}